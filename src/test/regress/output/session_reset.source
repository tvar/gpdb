set log_min_messages to ERROR;
CREATE FUNCTION gp_execute_on_server(content smallint, query cstring) returns boolean
language C as '@abs_builddir@/regress@DLSUFFIX@', 'gp_execute_on_server';
-- terminate backend process for this session on segment with content ID = 0
select gp_execute_on_server(0::smallint, 'select pg_terminate_backend(pg_backend_pid())'::cstring);
ERROR:  could not execute command on QE
DETAIL:  terminating connection due to administrator command  (seg1 10.152.10.149:25433 pid=4137)
HINT:  command: 'select pg_terminate_backend(pg_backend_pid())'
-- session is reset and gp_session_id value changes
-- sess_id in pg_stat_activity should be consistent with gp_session_id
select session_id AS session_not_in_stat_activity from (select paramvalue AS session_id from gp_toolkit.gp_param_settings() where paramname='gp_session_id' and paramsegment = 0) right_id where right_id.session_id not in (select sess_id::text from pg_stat_activity);
 session_not_in_stat_activity 
------------------------------
(0 rows)

set log_min_messages to default;
