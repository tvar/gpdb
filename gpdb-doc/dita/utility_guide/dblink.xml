<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_lv4_czp_fz">
  <title>dblink Functions</title>
  <shortdesc>The <codeph>dblink</codeph> module is provided for making easy connections to other
    databases either on the same database host, or on a remote host. </shortdesc>
  <body>
    <p><codeph>dblink</codeph> is intended for database users to perform short ad hoc queries in
      other databases. <codeph>dblink</codeph> is not intended as a replacement for external tables
      or for administrative tools such as <codeph>gptransfer</codeph>.</p>
    <p>The following procedure shows the basic steps for configuring and using
        <codeph>dblink</codeph> in Greenplum Database. See <xref
        href="https://www.postgresql.org/docs/8.3/static/dblink.html" format="html" scope="external"
        >dblink</xref> in the PostgreSQL documentation for more information about individual
      functions. </p>
    <note>You must specify both a hostname and a password to connect with <codeph>dblink</codeph> as
      a non-superuser.</note>
    <ol id="ol_nhg_f1q_fz">
      <li>Begin by creating a sample table to query using the <codeph>dblink</codeph> functions.
        These commands create a small table in the <codeph>postgres</codeph> database, which you
        will later query from the <codeph>gpadmin</codeph> database using
        <codeph>dblink</codeph>:<codeblock>$ <b>psql -d postgres</b>
psql (8.3.23)
Type "help" for help.

postgres=# <b>CREATE TABLE testdblink (a int, b text) DISTRIBUTED BY (a);</b>
CREATE TABLE
postgres=# <b>INSERT INTO testdblink VALUES (1, 'Cheese');</b>
INSERT 0 1
postgres=# <b>INSERT INTO testdblink VALUES (2, 'Fish');</b>
INSERT 0 1
postgres=# <b>\q
</b>$</codeblock></li>
      <li>Log into a different database (<codeph>gpadmin</codeph> in this example) and install the
          <codeph>dblink</codeph> functions if they are not already available.  You install the
          <codeph>dblink</codeph> functions using the
          <codeph>$GPHOME/share/postgresql/contrib/dblink.sql</codeph>
        script:<codeblock>$ <b>psql -d gpadmin</b>
psql (8.3.23)
Type "help" for help.

gpadmin=# <b>\i /usr/local/gpdb/share/postgresql/contrib/dblink.sql</b>
SET
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
REVOKE
REVOKE
CREATE FUNCTION
CREATE FUNCTION
...</codeblock></li>
      <li>Use the <codeph>dblink_connect</codeph> function to create both implicit and named
        connections to other databases. The connection string that you provide should be a
        libpq-style keyword/value string. For example, to create a named connection to the
          <codeph>postgres</codeph> database on the local Greenplum Database
          system:<codeblock>gpadmin=# <b>SELECT dblink_connect('mylocalconn', 'dbname=postgres');</b>
 dblink_connect
----------------
 OK
(1 row)</codeblock><p>To
          make a connection to a remote database system, simply include host and port information in
          the connection string. For example, to create an implicit <codeph>dblink</codeph>
          connection to a remote
          system:<codeblock>gpadmin=# <b>SELECT dblink_connect('host=remotehost port=5432 dbname=postgres');</b></codeblock></p><note>You
          must specify both a hostname and a password in the connection string to connect as a
          non-superuser.</note></li>
      <li>Use the basic <codeph>dblink</codeph> function to query a database using a configured
        connection. Keep in mind that the <codeph>dblink</codeph> function returns a record type, so
        you must assign the columns returned in the <codeph>dblink</codeph> query. For example, the
        following command uses the named connection to query the table you created in Step
          1:<codeblock>gpadmin=# <b>SELECT * FROM dblink('mylocalconn', 'SELECT * FROM testdblink') AS dbltab(id int, product text);</b>
 id | product
----+---------
  1 | Cheese
  2 | Fish
(2 rows)</codeblock><p>In
          this release of Greenplum Database, statements that modify table data cannot use named or
          implicit <codeph>dblink</codeph> connections. Instead, you must provide the connection
          string directly in the <codeph>dblink</codeph> function. For
          example:<codeblock>gpadmin=# <b>CREATE TABLE testdbllocal (a int, b text) DISTRIBUTED BY (a);</b>
CREATE TABLE
gpadmin=# <b>INSERT INTO testdbllocal select * FROM dblink('dbname=postgres', 'SELECT * FROM testdblink') AS dbltab(id int, product text);</b>
INSERT 0 2</codeblock></p></li>
    </ol>
  </body>
</topic>
